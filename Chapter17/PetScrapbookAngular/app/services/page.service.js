"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var page_1 = require("../models/page");
var fileSystem = require("file-system");
var image = require("image-source");
var PageService = (function () {
    function PageService() {
    }
    PageService.prototype.getPage = function (id) {
        var pages = this.getPages();
        var index = this.findPageIndex(pages, id);
        if (index === -1)
            return null;
        return pages[index];
    };
    PageService.prototype.getPages = function () {
        var file = fileSystem.knownFolders.documents().getFile("scrapbook.json");
        var pages = file.readTextSync().length === 0
            ? new Array()
            : JSON.parse(file.readTextSync());
        pages.forEach(function (page) {
            page.Image = image.fromBase64(page.ImageBase64);
        });
        return pages;
    };
    PageService.prototype.savePage = function (scrapbookPage) {
        var file = fileSystem.knownFolders.documents().getFile("scrapbook.json");
        var pages = this.getPages();
        var index = this.findPageIndex(pages, scrapbookPage.Id);
        var page = new page_1.Page();
        page.Id = scrapbookPage.Id;
        page.Title = scrapbookPage.Title;
        page.Gender = scrapbookPage.Gender;
        page.Age = scrapbookPage.Age;
        page.BirthDate = scrapbookPage.BirthDate;
        page.ImageBase64 = scrapbookPage.ImageBase64;
        page.Lat = scrapbookPage.Lat;
        page.Long = scrapbookPage.Long;
        if (index !== -1) {
            pages[index] = scrapbookPage;
        }
        else {
            pages.push(scrapbookPage);
        }
        var json = JSON.stringify(pages);
        file.writeText(json);
    };
    PageService.prototype.findPageIndex = function (pages, id) {
        return pages.findIndex(function (element) {
            return element.Id === id;
        });
    };
    return PageService;
}());
PageService = __decorate([
    core_1.Injectable()
], PageService);
exports.PageService = PageService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicGFnZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQTJDO0FBQzNDLHVDQUFzQztBQUN0Qyx3Q0FBMEM7QUFDMUMsb0NBQXNDO0FBR3RDLElBQWEsV0FBVztJQUF4QjtJQXVEQSxDQUFDO0lBdERDLDZCQUFPLEdBQVAsVUFBUSxFQUFVO1FBQ2hCLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUM1QixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztRQUUxQyxFQUFFLENBQUMsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDZixNQUFNLENBQUMsSUFBSSxDQUFDO1FBRWQsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN0QixDQUFDO0lBRUQsOEJBQVEsR0FBUjtRQUNFLElBQUksSUFBSSxHQUFHLFVBQVUsQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDekUsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLE1BQU0sS0FBSyxDQUFDO2NBQ3hDLElBQUksS0FBSyxFQUFRO2NBQ0osSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQztRQUVqRCxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQUMsSUFBSTtZQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ2xELENBQUMsQ0FBQyxDQUFDO1FBRUgsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFRCw4QkFBUSxHQUFSLFVBQVMsYUFBbUI7UUFDMUIsSUFBSSxJQUFJLEdBQUcsVUFBVSxDQUFDLFlBQVksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUN6RSxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDNUIsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsYUFBYSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3hELElBQUksSUFBSSxHQUFHLElBQUksV0FBSSxFQUFFLENBQUM7UUFFdEIsSUFBSSxDQUFDLEVBQUUsR0FBRyxhQUFhLENBQUMsRUFBRSxDQUFDO1FBQzNCLElBQUksQ0FBQyxLQUFLLEdBQUcsYUFBYSxDQUFDLEtBQUssQ0FBQztRQUNqQyxJQUFJLENBQUMsTUFBTSxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUM7UUFDbkMsSUFBSSxDQUFDLEdBQUcsR0FBRyxhQUFhLENBQUMsR0FBRyxDQUFDO1FBQzdCLElBQUksQ0FBQyxTQUFTLEdBQUcsYUFBYSxDQUFDLFNBQVMsQ0FBQztRQUN6QyxJQUFJLENBQUMsV0FBVyxHQUFHLGFBQWEsQ0FBQyxXQUFXLENBQUM7UUFDN0MsSUFBSSxDQUFDLEdBQUcsR0FBRyxhQUFhLENBQUMsR0FBRyxDQUFDO1FBQzdCLElBQUksQ0FBQyxJQUFJLEdBQUcsYUFBYSxDQUFDLElBQUksQ0FBQztRQUUvQixFQUFFLENBQUMsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2pCLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxhQUFhLENBQUM7UUFDL0IsQ0FBQztRQUNELElBQUksQ0FBQyxDQUFDO1lBQ0osS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUM1QixDQUFDO1FBRUQsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNqQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7SUFFTyxtQ0FBYSxHQUFyQixVQUFzQixLQUFVLEVBQUUsRUFBVTtRQUMxQyxNQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxVQUFVLE9BQU87WUFDdEMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDO1FBQzNCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUNILGtCQUFDO0FBQUQsQ0FBQyxBQXZERCxJQXVEQztBQXZEWSxXQUFXO0lBRHZCLGlCQUFVLEVBQUU7R0FDQSxXQUFXLENBdUR2QjtBQXZEWSxrQ0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiOyBcbmltcG9ydCB7IFBhZ2UgfSBmcm9tIFwiLi4vbW9kZWxzL3BhZ2VcIjtcbmltcG9ydCAqIGFzIGZpbGVTeXN0ZW0gZnJvbSBcImZpbGUtc3lzdGVtXCI7XG5pbXBvcnQgKiBhcyBpbWFnZSBmcm9tIFwiaW1hZ2Utc291cmNlXCI7XG5cbkBJbmplY3RhYmxlKCkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbmV4cG9ydCBjbGFzcyBQYWdlU2VydmljZSB7XG4gIGdldFBhZ2UoaWQ6IG51bWJlcik6IFBhZ2Uge1xuICAgIGxldCBwYWdlcyA9IHRoaXMuZ2V0UGFnZXMoKTtcbiAgICBsZXQgaW5kZXggPSB0aGlzLmZpbmRQYWdlSW5kZXgocGFnZXMsIGlkKTtcblxuICAgIGlmIChpbmRleCA9PT0gLTEpXG4gICAgICByZXR1cm4gbnVsbDtcblxuICAgIHJldHVybiBwYWdlc1tpbmRleF07XG4gIH1cbiAgXG4gIGdldFBhZ2VzKCk6IEFycmF5PFBhZ2U+IHtcbiAgICBsZXQgZmlsZSA9IGZpbGVTeXN0ZW0ua25vd25Gb2xkZXJzLmRvY3VtZW50cygpLmdldEZpbGUoXCJzY3JhcGJvb2suanNvblwiKTtcbiAgICBsZXQgcGFnZXMgPSBmaWxlLnJlYWRUZXh0U3luYygpLmxlbmd0aCA9PT0gMCBcbiAgICAgID8gbmV3IEFycmF5PFBhZ2U+KCkgXG4gICAgICA6IDxBcnJheTxQYWdlPj5KU09OLnBhcnNlKGZpbGUucmVhZFRleHRTeW5jKCkpO1xuXG4gICAgcGFnZXMuZm9yRWFjaCgocGFnZSkgPT4ge1xuICAgICAgcGFnZS5JbWFnZSA9IGltYWdlLmZyb21CYXNlNjQocGFnZS5JbWFnZUJhc2U2NCk7XG4gICAgfSk7XG4gICAgXG4gICAgcmV0dXJuIHBhZ2VzO1xuICB9XG5cbiAgc2F2ZVBhZ2Uoc2NyYXBib29rUGFnZTogUGFnZSk6IHZvaWQge1xuICAgIGxldCBmaWxlID0gZmlsZVN5c3RlbS5rbm93bkZvbGRlcnMuZG9jdW1lbnRzKCkuZ2V0RmlsZShcInNjcmFwYm9vay5qc29uXCIpO1xuICAgIGxldCBwYWdlcyA9IHRoaXMuZ2V0UGFnZXMoKTtcbiAgICBsZXQgaW5kZXggPSB0aGlzLmZpbmRQYWdlSW5kZXgocGFnZXMsIHNjcmFwYm9va1BhZ2UuSWQpO1xuICAgIGxldCBwYWdlID0gbmV3IFBhZ2UoKTtcblxuICAgIHBhZ2UuSWQgPSBzY3JhcGJvb2tQYWdlLklkO1xuICAgIHBhZ2UuVGl0bGUgPSBzY3JhcGJvb2tQYWdlLlRpdGxlO1xuICAgIHBhZ2UuR2VuZGVyID0gc2NyYXBib29rUGFnZS5HZW5kZXI7XG4gICAgcGFnZS5BZ2UgPSBzY3JhcGJvb2tQYWdlLkFnZTtcbiAgICBwYWdlLkJpcnRoRGF0ZSA9IHNjcmFwYm9va1BhZ2UuQmlydGhEYXRlO1xuICAgIHBhZ2UuSW1hZ2VCYXNlNjQgPSBzY3JhcGJvb2tQYWdlLkltYWdlQmFzZTY0O1xuICAgIHBhZ2UuTGF0ID0gc2NyYXBib29rUGFnZS5MYXQ7XG4gICAgcGFnZS5Mb25nID0gc2NyYXBib29rUGFnZS5Mb25nO1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgcGFnZXNbaW5kZXhdID0gc2NyYXBib29rUGFnZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBwYWdlcy5wdXNoKHNjcmFwYm9va1BhZ2UpO1xuICAgIH1cblxuICAgIHZhciBqc29uID0gSlNPTi5zdHJpbmdpZnkocGFnZXMpO1xuICAgIGZpbGUud3JpdGVUZXh0KGpzb24pO1xuICB9XG5cbiAgcHJpdmF0ZSBmaW5kUGFnZUluZGV4KHBhZ2VzOiBhbnksIGlkOiBudW1iZXIpOiBudW1iZXIge1xuICAgIHJldHVybiBwYWdlcy5maW5kSW5kZXgoZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgIHJldHVybiBlbGVtZW50LklkID09PSBpZDtcbiAgICB9KTtcbiAgfVxufSJdfQ==